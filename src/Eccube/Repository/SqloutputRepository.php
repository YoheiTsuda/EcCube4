<?php

/*
 * This file is part of EC-CUBE
 *
 * Copyright(c) EC-CUBE CO.,LTD. All Rights Reserved.
 *
 * http://www.ec-cube.co.jp/
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Eccube\Repository;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Criteria;
use Doctrine\DBAL\Exception\DriverException;
use Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException;
use Eccube\Entity\Sqloutput;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * SqloutputRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SqloutputRepository extends AbstractRepository
{
    public function __construct(RegistryInterface $registry)
    {
        parent::__construct($registry, Sqloutput::class);
    }

    /**
     * 新着情報を登録します.
     *
     * @param $Sqloutput
     */
    public function save($Sqloutput)
    {
        $em = $this->getEntityManager();
        $em->persist($Sqloutput);
        $em->flush($Sqloutput);
    }

    /**
     * 新着情報を削除します.
     *
     * @param Sqloutput $Sqloutput
     *
     * @throws ForeignKeyConstraintViolationException 外部キー制約違反の場合
     * @throws DriverException SQLiteの場合, 外部キー制約違反が発生すると, DriverExceptionをthrowします.
     */
    public function delete($Sqloutput)
    {
        $em = $this->getEntityManager();
        $em->remove($Sqloutput);
        $em->flush($Sqloutput);
    }

    /**
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getQueryBuilderAll()
    {
        $qb = $this->createQueryBuilder('n');
        $qb->orderBy('n.id', 'DESC');

        return $qb;
    }

public function getPageList()
{
  $qb = $this->createQueryBuilder('n');

  $pagination = $qb
  ->getQuery()
  ->getResult();

  return $pagination;
}



    /**
     * @return Sqloutput[]|ArrayCollection
     */
    public function getList()
    {
        // second level cacheを効かせるためfindByで取得
        $Results = $this->findBy(['visible' => true], ['publish_date' => 'DESC', 'id' => 'DESC']);

        // 公開日時前のNewsをフィルター
        $criteria = Criteria::create();
        $criteria->where(Criteria::expr()->lte('publish_date', new \DateTime()));

        $Sqloutput = new ArrayCollection($Results);

        return $Sqloutput->matching($criteria);
    }
}
